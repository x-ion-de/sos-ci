- hosts: devstack_instances
  vars:
    ansible_python_interpreter: /usr/bin/python3
    ansible_ssh_common_args: -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no
    chefdk: chefdk_1.6.1-1_amd64.deb

  tasks:

  - name: fixup hosts file
    become: yes
    lineinfile:
      dest: /etc/hosts
      regexp: '^127\.0\.0\.1'
      line: "127.0.0.1 localhost {{ iname }}"

  - name: create workspace
    shell: mkdir /home/ubuntu/logs

  - name: install pkgs
    become: true
    apt: pkg={{ item }} state=present update_cache=true
    with_items:
      - build-essential
      - liblzma-dev
      - libssl-dev
      - zlib1g-dev

  - name: copy clone dependencies script
    copy:
      src: /home/ubuntu/sos-ci/sos-ci/ansible/templates/clone_deps.sh
      dest: /home/ubuntu/clone_deps.sh

  - name: run clone dependencies script
    shell: depends_on={{ depends_on }} bash -x /home/ubuntu/clone_deps.sh > /tmp/clone.sh.log.out 2>&1
    register: clone_result
    ignore_errors: true

  - name: Fetch stack.sh.log.out
    fetch: src=/tmp/clone.sh.log.out dest={{ results_dir }}/clone.sh.log.out flat=yes validate_md5=no

  - name: Fail the clone task
    fail: msg="Failed to complete clone_deps.sh"
    when: clone_result|failed

  - name: download chefdk
    get_url:
      # url: https://packages.chef.io/stable/ubuntu/12.04/{{ chefdk }}
      url: http://repo.x-ion.de/{{ chefdk }}
      dest: /home/ubuntu/

  - name: install chefdk
    become: yes
    shell: dpkg -i /home/ubuntu/{{ chefdk }}

  - name: run chef client
    shell: ZUUL_CHANGES=none WORKSPACE=/home/ubuntu/logs chef exec rake integration > /tmp/stack.sh.log.out 2>&1
    args:
      chdir: /home/ubuntu/openstack-chef-repo
    register: stack_result
    ignore_errors: true

  - name: create results.tar
    shell: tar czf /tmp/{{ instance_name }}.tar.gz -C logs .

  - name: Fetch results.tar
    fetch: src=/tmp/{{ instance_name }}.tar.gz dest={{ results_dir }}/{{ instance_name }}.tar.gz flat=yes validate_md5=no

  - name: Fetch stack.sh.log.out
    fetch: src=/tmp/stack.sh.log.out dest={{ results_dir }}/stack.sh.log.out flat=yes validate_md5=no

  - name: Fail the stack.sh task
    fail: msg="Failed to complete stack.sh"
    when: stack_result|failed
